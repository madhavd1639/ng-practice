name: CI PIPELINE

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Create Build
        run: npm run build

      - name: Check job status
        id: check-job
        run: echo "Job Status::${{ job.status }}"  # Assuming the job succeeded, replace with actual logic

      - name: Update PR status
        if: ${{ job.status == 'success' }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { github, context } = require('@actions/github');
            const prNumber = context.payload.pull_request.number;
            const repo = context.repo;
            const checksResponse = await github.checks.listForRef({
              ...repo,
              ref: context.payload.pull_request.head.sha
            });
            const checks = checksResponse.data.check_runs;
            const allChecksPassed = checks.every(check => check.status === 'completed' && check.conclusion === 'success');
            if (allChecksPassed) {
              github.repos.createCommitStatus({
                ...repo,
                state: 'success',
                description: 'The workflow completed successfully.',
                context: 'YourWorkflowName',
                target_url: context.payload.repository.html_url + '/actions/runs/' + context.runId
              });
              github.repos.merge({
                ...repo,
                pull_number: prNumber
              });
            } else {
              console.log('Not all checks have passed. Merge not allowed.');
            }
